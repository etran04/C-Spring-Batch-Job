<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" 
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">
 
  <bean id="test" class="com.erictran.model.TestScore" scope="prototype" />
  <bean id="customProcessor" class="com.erictran.model.CustomItemProcessor"/>
  
  <!-- Main batch job. 
  	   Reads from a csv (comma separated values file).
  	   Processes the test score (gives it a grade)
  	   Writes to the mysql database   -->
  <batch:job id="reportJob">
	<batch:step id="step1">
	  <batch:tasklet>
		<batch:chunk 
			reader="cvsFileItemReader" writer="mysqlItemWriter" processor="customProcessor" commit-interval="2">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
  </batch:job>
 
  <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
 
	<!-- Read a csv file -->
	<property name="resource" value="classpath:csv/scores.txt" />
 
	<property name="lineMapper">
		<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		  
		  <!-- split each line by the commas -->
		  <property name="lineTokenizer">
		        <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				    <property name="names" value="classid, studentid, tscore" />
			    </bean>
		  </property>
		  
		  <property name="fieldSetMapper">   
			  <!-- map to a TestScore -->
			  <bean
			    class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
				<property name="prototypeBeanName" value="test" />
			  </bean>			
		  </property>
 
	   </bean>
	</property>
 
  </bean>
 
  <!-- Writes to the database -->
  <bean id="mysqlItemWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
	<property name="dataSource" ref="dataSource" />
	<property name="sql">
	  <!-- DataSource points to my MySQL server called test2 (ran locally) 
	  	   Inserts into a meta-table called challenge in 'test2' -->
	  <value>
            <![CDATA[     
				insert into challenge(STUDENT_ID, CLASS_ID, SCORE, GRADE) values (:studentid, :classid, :tscore, :grade)
            ]]>
	  </value>
	</property>

	<!-- Matches the items to its object's properties. -->
	<property name="itemSqlParameterSourceProvider">
		<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
	</property>
  </bean>
 
</beans>